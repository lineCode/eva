#To compile you need visual studio 10 express
#start "nmake -f nmakefile" from visual studio 10 command prompt
#To clean the project type "nmake -f nmakefile clean"

PROGRAM = eva.exe

ANTLR_BIN_DIR = antlr
SRC_DIR = src
GRAMMAR_DIR = $(SRC_DIR)/grammar
INCLUDE_DIRS = /I $(SRC_DIR) /I . /I $(ANTLR_BIN_DIR)\libantlr3c-3.2\include
LINK_FLAG = /nologo /NODEFAULTLIB:libcmt /out:$@ /LIBPATH:"$(ANTLR_BIN_DIR)"

ANTLR_GEN_SRC = EvaLexer.c EvaParser.c EvaTree.c
ANTLR_GEN_HEADERS = EvaLexer.h EvaParser.h EvaTree.h

OBJECT_FILES = EvaLexer.obj EvaParser.obj EvaTree.obj Expr.obj Util.obj WinGui.obj
CPPFLAGS = $(INCLUDE_DIRS) /nologo /O2 /FD /EHsc /c
CFLAGS = $(CPPFLAGS) 
JAVAFLAGS = -classpath "$(ANTLR_BIN_DIR)/antlr-3.4.jar" org.antlr.Tool

$(PROGRAM): $(OBJECT_FILES)
	link.exe $** $(LINK_FLAG) antlr3cd.lib gdi32.lib User32.lib kernel32.lib 

EvaLexer.c: $(GRAMMAR_DIR)/Eva.g
	java $(JAVAFLAGS) $**
EvaParser.c: $(GRAMMAR_DIR)/Eva.g
	java $(JAVAFLAGS) $**
EvaTree.c: $(GRAMMAR_DIR)/EvaTree.g
	java $(JAVAFLAGS) $**
	
EvaLexer.obj: EvaLexer.c
EvaParser.obj: EvaParser.c
EvaTree.obj: EvaTree.c
Expr.obj: $(SRC_DIR)/Expr.c
	$(CC) $(CFLAGS) $?
Util.obj: $(SRC_DIR)/Util.c
	$(CC) $(CFLAGS) $?
WinGui.obj: $(SRC_DIR)/ui/WinGui.cpp
	$(CC) $(CFLAGS) $?
	
#To clean the project type "nmake -f nmakefile clean"
clean:
	del $(PROGRAM) $(OBJECT_FILES) $(ANTLR_GEN_SRC) $(ANTLR_GEN_HEADERS) *.tlh *.idb *.exp *.lib *.tokens